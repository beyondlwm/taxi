// Code generated by protoc-gen-go.
// source: descriptor.proto
// DO NOT EDIT!

/*
Package descriptor is a generated protocol buffer package.

It is generated from these files:
	descriptor.proto

It has these top-level messages:
	StructDescriptor
	FieldDescriptor
	ImportResult
	ExportRequest
*/
package descriptor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// available type names:
//  nil,bool,int8,uint8,int16,uint16,int32,uint32,int64,uint64,float32,float64,string,bytes,datetime
type TypeEnum int32

const (
	TypeEnum_Unknown  TypeEnum = 0
	TypeEnum_Nil      TypeEnum = 1
	TypeEnum_Bool     TypeEnum = 2
	TypeEnum_Int8     TypeEnum = 3
	TypeEnum_Uint8    TypeEnum = 4
	TypeEnum_Int16    TypeEnum = 5
	TypeEnum_Uint16   TypeEnum = 6
	TypeEnum_Int      TypeEnum = 7
	TypeEnum_Int32    TypeEnum = 8
	TypeEnum_Uint32   TypeEnum = 9
	TypeEnum_Int64    TypeEnum = 10
	TypeEnum_Uint64   TypeEnum = 11
	TypeEnum_Float    TypeEnum = 12
	TypeEnum_Float32  TypeEnum = 13
	TypeEnum_Float64  TypeEnum = 14
	TypeEnum_String   TypeEnum = 15
	TypeEnum_Enum     TypeEnum = 16
	TypeEnum_Bytes    TypeEnum = 17
	TypeEnum_DateTime TypeEnum = 18
	TypeEnum_Json     TypeEnum = 19
	TypeEnum_Array    TypeEnum = 20
	TypeEnum_Any      TypeEnum = 21
)

var TypeEnum_name = map[int32]string{
	0:  "Unknown",
	1:  "Nil",
	2:  "Bool",
	3:  "Int8",
	4:  "Uint8",
	5:  "Int16",
	6:  "Uint16",
	7:  "Int",
	8:  "Int32",
	9:  "Uint32",
	10: "Int64",
	11: "Uint64",
	12: "Float",
	13: "Float32",
	14: "Float64",
	15: "String",
	16: "Enum",
	17: "Bytes",
	18: "DateTime",
	19: "Json",
	20: "Array",
	21: "Any",
}
var TypeEnum_value = map[string]int32{
	"Unknown":  0,
	"Nil":      1,
	"Bool":     2,
	"Int8":     3,
	"Uint8":    4,
	"Int16":    5,
	"Uint16":   6,
	"Int":      7,
	"Int32":    8,
	"Uint32":   9,
	"Int64":    10,
	"Uint64":   11,
	"Float":    12,
	"Float32":  13,
	"Float64":  14,
	"String":   15,
	"Enum":     16,
	"Bytes":    17,
	"DateTime": 18,
	"Json":     19,
	"Array":    20,
	"Any":      21,
}

func (x TypeEnum) String() string {
	return proto.EnumName(TypeEnum_name, int32(x))
}
func (TypeEnum) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StructDescriptor struct {
	Name          string             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CamelCaseName string             `protobuf:"bytes,2,opt,name=camel_case_name,json=camelCaseName" json:"camel_case_name,omitempty"`
	Comment       string             `protobuf:"bytes,3,opt,name=comment" json:"comment,omitempty"`
	Fields        []*FieldDescriptor `protobuf:"bytes,4,rep,name=fields" json:"fields,omitempty"`
	Options       map[string]string  `protobuf:"bytes,5,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *StructDescriptor) Reset()                    { *m = StructDescriptor{} }
func (m *StructDescriptor) String() string            { return proto.CompactTextString(m) }
func (*StructDescriptor) ProtoMessage()               {}
func (*StructDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StructDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StructDescriptor) GetCamelCaseName() string {
	if m != nil {
		return m.CamelCaseName
	}
	return ""
}

func (m *StructDescriptor) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *StructDescriptor) GetFields() []*FieldDescriptor {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *StructDescriptor) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type FieldDescriptor struct {
	Name             string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CamelCaseName    string            `protobuf:"bytes,2,opt,name=camel_case_name,json=camelCaseName" json:"camel_case_name,omitempty"`
	Type             TypeEnum          `protobuf:"varint,3,opt,name=type,enum=descriptor.TypeEnum" json:"type,omitempty"`
	TypeName         string            `protobuf:"bytes,4,opt,name=type_name,json=typeName" json:"type_name,omitempty"`
	OriginalTypeName string            `protobuf:"bytes,5,opt,name=original_type_name,json=originalTypeName" json:"original_type_name,omitempty"`
	Comment          string            `protobuf:"bytes,6,opt,name=comment" json:"comment,omitempty"`
	ColumnIndex      uint32            `protobuf:"varint,7,opt,name=column_index,json=columnIndex" json:"column_index,omitempty"`
	Options          map[string]string `protobuf:"bytes,8,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *FieldDescriptor) Reset()                    { *m = FieldDescriptor{} }
func (m *FieldDescriptor) String() string            { return proto.CompactTextString(m) }
func (*FieldDescriptor) ProtoMessage()               {}
func (*FieldDescriptor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FieldDescriptor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldDescriptor) GetCamelCaseName() string {
	if m != nil {
		return m.CamelCaseName
	}
	return ""
}

func (m *FieldDescriptor) GetType() TypeEnum {
	if m != nil {
		return m.Type
	}
	return TypeEnum_Unknown
}

func (m *FieldDescriptor) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *FieldDescriptor) GetOriginalTypeName() string {
	if m != nil {
		return m.OriginalTypeName
	}
	return ""
}

func (m *FieldDescriptor) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *FieldDescriptor) GetColumnIndex() uint32 {
	if m != nil {
		return m.ColumnIndex
	}
	return 0
}

func (m *FieldDescriptor) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type ImportResult struct {
	Version     string              `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Comment     string              `protobuf:"bytes,2,opt,name=comment" json:"comment,omitempty"`
	Timestamp   string              `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Options     map[string]string   `protobuf:"bytes,4,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Descriptors []*StructDescriptor `protobuf:"bytes,5,rep,name=descriptors" json:"descriptors,omitempty"`
}

func (m *ImportResult) Reset()                    { *m = ImportResult{} }
func (m *ImportResult) String() string            { return proto.CompactTextString(m) }
func (*ImportResult) ProtoMessage()               {}
func (*ImportResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ImportResult) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ImportResult) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ImportResult) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *ImportResult) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ImportResult) GetDescriptors() []*StructDescriptor {
	if m != nil {
		return m.Descriptors
	}
	return nil
}

type ExportRequest struct {
	Version  string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Format   string `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	Filepath string `protobuf:"bytes,4,opt,name=filepath" json:"filepath,omitempty"`
	Datafile string `protobuf:"bytes,5,opt,name=datafile" json:"datafile,omitempty"`
	Args     string `protobuf:"bytes,6,opt,name=args" json:"args,omitempty"`
}

func (m *ExportRequest) Reset()                    { *m = ExportRequest{} }
func (m *ExportRequest) String() string            { return proto.CompactTextString(m) }
func (*ExportRequest) ProtoMessage()               {}
func (*ExportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ExportRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ExportRequest) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *ExportRequest) GetFilepath() string {
	if m != nil {
		return m.Filepath
	}
	return ""
}

func (m *ExportRequest) GetDatafile() string {
	if m != nil {
		return m.Datafile
	}
	return ""
}

func (m *ExportRequest) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

func init() {
	proto.RegisterType((*StructDescriptor)(nil), "descriptor.StructDescriptor")
	proto.RegisterType((*FieldDescriptor)(nil), "descriptor.FieldDescriptor")
	proto.RegisterType((*ImportResult)(nil), "descriptor.ImportResult")
	proto.RegisterType((*ExportRequest)(nil), "descriptor.ExportRequest")
	proto.RegisterEnum("descriptor.TypeEnum", TypeEnum_name, TypeEnum_value)
}

func init() { proto.RegisterFile("descriptor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdd, 0x4e, 0xdb, 0x4c,
	0x10, 0xfd, 0xec, 0xfc, 0x39, 0x93, 0x04, 0xe6, 0xdb, 0xd2, 0x2a, 0x02, 0x2e, 0x28, 0x52, 0xab,
	0xb4, 0xaa, 0x90, 0x48, 0x50, 0x84, 0xb8, 0x68, 0xc5, 0xaf, 0x94, 0x5e, 0x50, 0xc9, 0xc0, 0x75,
	0xb4, 0x4d, 0x16, 0xba, 0xc2, 0xde, 0x75, 0xd7, 0x1b, 0x8a, 0x1f, 0xa2, 0x8f, 0xd0, 0xbe, 0x2a,
	0xd5, 0xae, 0xbd, 0xd8, 0xa0, 0x8a, 0x1b, 0xd4, 0xab, 0xcc, 0x9c, 0x39, 0xb3, 0x39, 0x67, 0x67,
	0xd6, 0x80, 0x73, 0x96, 0xce, 0x14, 0x4f, 0xb4, 0x54, 0x5b, 0x89, 0x92, 0x5a, 0x12, 0x28, 0x91,
	0xcd, 0xdf, 0x3e, 0xe0, 0x99, 0x56, 0x8b, 0x99, 0x3e, 0xba, 0x07, 0x09, 0x81, 0xba, 0xa0, 0x31,
	0xeb, 0x7b, 0x1b, 0xde, 0xa0, 0x1d, 0xda, 0x98, 0xbc, 0x85, 0xe5, 0x19, 0x8d, 0x59, 0x34, 0x9d,
	0xd1, 0x94, 0x4d, 0x6d, 0xd9, 0xb7, 0xe5, 0x9e, 0x85, 0x0f, 0x69, 0xca, 0x4e, 0x0d, 0xaf, 0x0f,
	0xad, 0x99, 0x8c, 0x63, 0x26, 0x74, 0xbf, 0x66, 0xeb, 0x2e, 0x25, 0x23, 0x68, 0x5e, 0x72, 0x16,
	0xcd, 0xd3, 0x7e, 0x7d, 0xa3, 0x36, 0xe8, 0x0c, 0xd7, 0xb6, 0x2a, 0xca, 0x4e, 0x4c, 0xa5, 0x94,
	0x10, 0x16, 0x54, 0x72, 0x08, 0x2d, 0x99, 0x68, 0x2e, 0x45, 0xda, 0x6f, 0xd8, 0xae, 0x77, 0xd5,
	0xae, 0xc7, 0xca, 0xb7, 0xbe, 0xe4, 0xdc, 0x63, 0xa1, 0x55, 0x16, 0xba, 0xce, 0xd5, 0x3d, 0xe8,
	0x56, 0x0b, 0x04, 0xa1, 0x76, 0xcd, 0xb2, 0xc2, 0x9e, 0x09, 0xc9, 0x0a, 0x34, 0x6e, 0x68, 0xb4,
	0x70, 0x9e, 0xf2, 0x64, 0xcf, 0xdf, 0xf5, 0x36, 0xef, 0x7c, 0x58, 0x7e, 0x24, 0xee, 0x59, 0xf7,
	0x33, 0x80, 0xba, 0xce, 0x12, 0x66, 0x2f, 0x67, 0x69, 0xb8, 0x52, 0x75, 0x73, 0x9e, 0x25, 0xec,
	0x58, 0x2c, 0xe2, 0xd0, 0x32, 0xc8, 0x1a, 0xb4, 0xcd, 0x6f, 0x7e, 0x56, 0xdd, 0x9e, 0x15, 0x18,
	0xc0, 0x1e, 0xf3, 0x01, 0x88, 0x54, 0xfc, 0x8a, 0x0b, 0x1a, 0x4d, 0x4b, 0x56, 0xc3, 0xb2, 0xd0,
	0x55, 0xce, 0x1d, 0xbb, 0x32, 0x94, 0xe6, 0xc3, 0xa1, 0xbc, 0x86, 0xee, 0x4c, 0x46, 0x8b, 0x58,
	0x4c, 0xb9, 0x98, 0xb3, 0xdb, 0x7e, 0x6b, 0xc3, 0x1b, 0xf4, 0xc2, 0x4e, 0x8e, 0x4d, 0x0c, 0x44,
	0x0e, 0xca, 0x11, 0x04, 0x76, 0x04, 0x83, 0x27, 0x06, 0xf7, 0x0f, 0x26, 0xf0, 0xcb, 0x87, 0xee,
	0x24, 0x4e, 0xa4, 0xd2, 0x21, 0x4b, 0x17, 0x91, 0x36, 0x6e, 0x6e, 0x98, 0x4a, 0xb9, 0x14, 0xc5,
	0x01, 0x2e, 0xad, 0xfa, 0xf4, 0x1f, 0xfa, 0x5c, 0x87, 0xb6, 0xe6, 0x31, 0x4b, 0x35, 0x8d, 0x93,
	0x62, 0x31, 0x4b, 0x80, 0x7c, 0x2a, 0x2d, 0xe6, 0xbb, 0xf9, 0xa6, 0x6a, 0xb1, 0xfa, 0xe7, 0x7f,
	0xf7, 0x47, 0x3e, 0x42, 0xa7, 0x6c, 0x70, 0xab, 0xba, 0xfe, 0xd4, 0xaa, 0x86, 0xd5, 0x86, 0x67,
	0xdd, 0xcf, 0x4f, 0x0f, 0x7a, 0xc7, 0xb7, 0xb9, 0xc4, 0xef, 0x0b, 0x96, 0x3e, 0x75, 0x41, 0xaf,
	0xa0, 0x79, 0x29, 0x55, 0x4c, 0xdd, 0xe3, 0x2c, 0x32, 0xb2, 0x0a, 0xc1, 0x25, 0x8f, 0x58, 0x42,
	0xf5, 0x37, 0xb7, 0x6a, 0x2e, 0x37, 0xb5, 0x39, 0xd5, 0xd4, 0xe4, 0xc5, 0x82, 0xdd, 0xe7, 0xe6,
	0x25, 0x50, 0x75, 0x95, 0x16, 0x5b, 0x65, 0xe3, 0xf7, 0x77, 0x1e, 0x04, 0x6e, 0x95, 0x49, 0x07,
	0x5a, 0x17, 0xe2, 0x5a, 0xc8, 0x1f, 0x02, 0xff, 0x23, 0x2d, 0xa8, 0x9d, 0xf2, 0x08, 0x3d, 0x12,
	0x40, 0xfd, 0x40, 0xca, 0x08, 0x7d, 0x13, 0x4d, 0x84, 0xde, 0xc5, 0x1a, 0x69, 0x43, 0xe3, 0x82,
	0x9b, 0xb0, 0x6e, 0xc2, 0x89, 0xd0, 0xdb, 0x63, 0x6c, 0x10, 0x80, 0xa6, 0x41, 0xb7, 0xc7, 0xd8,
	0x34, 0xed, 0x13, 0xa1, 0xb1, 0x55, 0xd4, 0x47, 0x43, 0x0c, 0x5c, 0x7d, 0x34, 0xc4, 0x76, 0x01,
	0x8f, 0x77, 0x10, 0x1c, 0x3c, 0xde, 0xc1, 0x8e, 0x81, 0x4f, 0x22, 0x49, 0x35, 0x76, 0x8d, 0x1a,
	0x1b, 0x8e, 0x86, 0xd8, 0xbb, 0x4f, 0xc6, 0x3b, 0xb8, 0x64, 0x1a, 0xce, 0xb4, 0xe2, 0xe2, 0x0a,
	0x97, 0x8d, 0x26, 0xa3, 0x1d, 0xd1, 0xb4, 0x1e, 0x64, 0x9a, 0xa5, 0xf8, 0x3f, 0xe9, 0x42, 0x70,
	0x44, 0x35, 0x3b, 0xe7, 0x31, 0x43, 0x62, 0x28, 0x9f, 0x53, 0x29, 0xf0, 0x85, 0xa1, 0xec, 0x2b,
	0x45, 0x33, 0x5c, 0x31, 0xfa, 0xf6, 0x45, 0x86, 0x2f, 0xbf, 0x36, 0xed, 0x77, 0x76, 0xf4, 0x27,
	0x00, 0x00, 0xff, 0xff, 0x65, 0x79, 0x1a, 0x8f, 0x7b, 0x05, 0x00, 0x00,
}
